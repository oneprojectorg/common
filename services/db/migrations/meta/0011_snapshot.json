{
  "id": "77be0b6f-edd7-43e6-bb35-0209f731ec39",
  "prevId": "925163c6-065b-47f0-8907-74b29acbea62",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.access_role_permissions_on_access_zones": {
      "name": "access_role_permissions_on_access_zones",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "access_role_id": {
          "name": "access_role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "access_zone_id": {
          "name": "access_zone_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "permission": {
          "name": "permission",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "access_role_permissions_on_access_zones_access_role_id_index": {
          "name": "access_role_permissions_on_access_zones_access_role_id_index",
          "columns": [
            {
              "expression": "access_role_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "access_role_permissions_on_access_zones_access_zone_id_index": {
          "name": "access_role_permissions_on_access_zones_access_zone_id_index",
          "columns": [
            {
              "expression": "access_zone_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "access_role_permissions_on_access_zones_access_role_id_access_zone_id_index": {
          "name": "access_role_permissions_on_access_zones_access_role_id_access_zone_id_index",
          "columns": [
            {
              "expression": "access_role_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "access_zone_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "access_role_permissions_on_access_zones_access_role_id_access_roles_id_fk": {
          "name": "access_role_permissions_on_access_zones_access_role_id_access_roles_id_fk",
          "tableFrom": "access_role_permissions_on_access_zones",
          "tableTo": "access_roles",
          "columnsFrom": [
            "access_role_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "access_role_permissions_on_access_zones_access_zone_id_access_zones_id_fk": {
          "name": "access_role_permissions_on_access_zones_access_zone_id_access_zones_id_fk",
          "tableFrom": "access_role_permissions_on_access_zones",
          "tableTo": "access_zones",
          "columnsFrom": [
            "access_zone_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.access_roles": {
      "name": "access_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "access_roles_id_index": {
          "name": "access_roles_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "access_roles_name_unique": {
          "name": "access_roles_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.access_zones": {
      "name": "access_zones",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "access_zones_id_index": {
          "name": "access_zones_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "access_zones_name_unique": {
          "name": "access_zones_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.allowList": {
      "name": "allowList",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "email": {
          "name": "email",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "allowList_email_index": {
          "name": "allowList_email_index",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "allowList_email_organizationId_idx": {
          "name": "allowList_email_organizationId_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "allowList_organization_id_organizations_id_fk": {
          "name": "allowList_organization_id_organizations_id_fk",
          "tableFrom": "allowList",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.attachments": {
      "name": "attachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "post_id": {
          "name": "post_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "storage_object_id": {
          "name": "storage_object_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_size": {
          "name": "file_size",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "uploaded_by": {
          "name": "uploaded_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "attachments_id_index": {
          "name": "attachments_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "attachments_post_id_index": {
          "name": "attachments_post_id_index",
          "columns": [
            {
              "expression": "post_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "attachments_storage_object_id_index": {
          "name": "attachments_storage_object_id_index",
          "columns": [
            {
              "expression": "storage_object_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "attachments_uploaded_by_index": {
          "name": "attachments_uploaded_by_index",
          "columns": [
            {
              "expression": "uploaded_by",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "attachments_profile_id_index": {
          "name": "attachments_profile_id_index",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "attachments_post_id_posts_id_fk": {
          "name": "attachments_post_id_posts_id_fk",
          "tableFrom": "attachments",
          "tableTo": "posts",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "attachments_storage_object_id_objects_id_fk": {
          "name": "attachments_storage_object_id_objects_id_fk",
          "tableFrom": "attachments",
          "tableTo": "objects",
          "schemaTo": "storage",
          "columnsFrom": [
            "storage_object_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "attachments_uploaded_by_organization_users_id_fk": {
          "name": "attachments_uploaded_by_organization_users_id_fk",
          "tableFrom": "attachments",
          "tableTo": "organization_users",
          "columnsFrom": [
            "uploaded_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "attachments_profile_id_profiles_id_fk": {
          "name": "attachments_profile_id_profiles_id_fk",
          "tableFrom": "attachments",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.comments": {
      "name": "comments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "parent_comment_id": {
          "name": "parent_comment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "comments_profile_id_idx": {
          "name": "comments_profile_id_idx",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "comments_parent_comment_id_idx": {
          "name": "comments_parent_comment_id_idx",
          "columns": [
            {
              "expression": "parent_comment_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "comments_profile_id_profiles_id_fk": {
          "name": "comments_profile_id_profiles_id_fk",
          "tableFrom": "comments",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.comments_to_posts": {
      "name": "comments_to_posts",
      "schema": "",
      "columns": {
        "comment_id": {
          "name": "comment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "post_id": {
          "name": "post_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "comments_to_posts_comment_id_idx": {
          "name": "comments_to_posts_comment_id_idx",
          "columns": [
            {
              "expression": "comment_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "comments_to_posts_post_id_idx": {
          "name": "comments_to_posts_post_id_idx",
          "columns": [
            {
              "expression": "post_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "comments_to_posts_comment_id_comments_id_fk": {
          "name": "comments_to_posts_comment_id_comments_id_fk",
          "tableFrom": "comments_to_posts",
          "tableTo": "comments",
          "columnsFrom": [
            "comment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "comments_to_posts_post_id_posts_id_fk": {
          "name": "comments_to_posts_post_id_posts_id_fk",
          "tableFrom": "comments_to_posts",
          "tableTo": "posts",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "comments_to_posts_comment_id_post_id_pk": {
          "name": "comments_to_posts_comment_id_post_id_pk",
          "columns": [
            "comment_id",
            "post_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.decision_processes": {
      "name": "decision_processes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "process_schema": {
          "name": "process_schema",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_by_profile_id": {
          "name": "created_by_profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "decision_processes_id_index": {
          "name": "decision_processes_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_processes_created_by_profile_id_index": {
          "name": "decision_processes_created_by_profile_id_index",
          "columns": [
            {
              "expression": "created_by_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_processes_name_gin_index": {
          "name": "decision_processes_name_gin_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"name\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "decision_processes_created_by_profile_id_profiles_id_fk": {
          "name": "decision_processes_created_by_profile_id_profiles_id_fk",
          "tableFrom": "decision_processes",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by_profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.decision_instances": {
      "name": "decision_instances",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "proposal_id": {
          "name": "proposal_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "decision_data": {
          "name": "decision_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "decided_by_profile_id": {
          "name": "decided_by_profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "decision_instances_id_index": {
          "name": "decision_instances_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_instances_proposal_id_index": {
          "name": "decision_instances_proposal_id_index",
          "columns": [
            {
              "expression": "proposal_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_instances_decided_by_profile_id_index": {
          "name": "decision_instances_decided_by_profile_id_index",
          "columns": [
            {
              "expression": "decided_by_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "decision_instances_proposal_id_decision_proposals_id_fk": {
          "name": "decision_instances_proposal_id_decision_proposals_id_fk",
          "tableFrom": "decision_instances",
          "tableTo": "decision_proposals",
          "columnsFrom": [
            "proposal_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "decision_instances_decided_by_profile_id_profiles_id_fk": {
          "name": "decision_instances_decided_by_profile_id_profiles_id_fk",
          "tableFrom": "decision_instances",
          "tableTo": "profiles",
          "columnsFrom": [
            "decided_by_profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "decision_instances_proposal_id_decided_by_profile_id_unique": {
          "name": "decision_instances_proposal_id_decided_by_profile_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "proposal_id",
            "decided_by_profile_id"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.individuals": {
      "name": "individuals",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "individuals_id_index": {
          "name": "individuals_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "individuals_profile_id_profiles_id_fk": {
          "name": "individuals_profile_id_profiles_id_fk",
          "tableFrom": "individuals",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.individuals_terms": {
      "name": "individuals_terms",
      "schema": "",
      "columns": {
        "individual_id": {
          "name": "individual_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "taxonomy_term_id": {
          "name": "taxonomy_term_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "individuals_terms_individual_id_individuals_id_fk": {
          "name": "individuals_terms_individual_id_individuals_id_fk",
          "tableFrom": "individuals_terms",
          "tableTo": "individuals",
          "columnsFrom": [
            "individual_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "individuals_terms_taxonomy_term_id_taxonomyTerms_id_fk": {
          "name": "individuals_terms_taxonomy_term_id_taxonomyTerms_id_fk",
          "tableFrom": "individuals_terms",
          "tableTo": "taxonomyTerms",
          "columnsFrom": [
            "taxonomy_term_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "individuals_terms_individual_id_taxonomy_term_id_pk": {
          "name": "individuals_terms_individual_id_taxonomy_term_id_pk",
          "columns": [
            "individual_id",
            "taxonomy_term_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.links": {
      "name": "links",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "href": {
          "name": "href",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "link_type": {
          "name": "link_type",
          "type": "link_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'offering'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "links_id_index": {
          "name": "links_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "links_organization_id_idx": {
          "name": "links_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "links_organization_id_organizations_id_fk": {
          "name": "links_organization_id_organizations_id_fk",
          "tableFrom": "links",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.locations": {
      "name": "locations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "place_id": {
          "name": "place_id",
          "type": "varchar(512)",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "plus_code": {
          "name": "plus_code",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "geometry(point)",
          "primaryKey": false,
          "notNull": false
        },
        "country_code": {
          "name": "country_code",
          "type": "varchar(2)",
          "primaryKey": false,
          "notNull": false
        },
        "country_name": {
          "name": "country_name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "locations_id_index": {
          "name": "locations_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "locations_place_id_index": {
          "name": "locations_place_id_index",
          "columns": [
            {
              "expression": "place_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "spatial_index": {
          "name": "spatial_index",
          "columns": [
            {
              "expression": "location",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gist",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "locations_placeId_unique": {
          "name": "locations_placeId_unique",
          "nullsNotDistinct": false,
          "columns": [
            "place_id"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.modules": {
      "name": "modules",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "slug": {
          "name": "slug",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "modules_id_index": {
          "name": "modules_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "modules_slug_index": {
          "name": "modules_slug_index",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "modules_is_active_index": {
          "name": "modules_is_active_index",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "modules_slug_unique": {
          "name": "modules_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organization_relationships": {
      "name": "organization_relationships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "source_organization_id": {
          "name": "source_organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "target_organization_id": {
          "name": "target_organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "relationship_type": {
          "name": "relationship_type",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "pending": {
          "name": "pending",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "organization_relationships_source_organization_id_index": {
          "name": "organization_relationships_source_organization_id_index",
          "columns": [
            {
              "expression": "source_organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organization_relationships_target_organization_id_index": {
          "name": "organization_relationships_target_organization_id_index",
          "columns": [
            {
              "expression": "target_organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organization_relationships_relationship_type_index": {
          "name": "organization_relationships_relationship_type_index",
          "columns": [
            {
              "expression": "relationship_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organization_relationships_source_organization_id_pending_index": {
          "name": "organization_relationships_source_organization_id_pending_index",
          "columns": [
            {
              "expression": "source_organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "pending",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organization_relationships_target_organization_id_pending_index": {
          "name": "organization_relationships_target_organization_id_pending_index",
          "columns": [
            {
              "expression": "target_organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "pending",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organization_relationships_relationship_type_pending_index": {
          "name": "organization_relationships_relationship_type_pending_index",
          "columns": [
            {
              "expression": "relationship_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "pending",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organization_relationships_source_organization_id_target_organization_id_index": {
          "name": "organization_relationships_source_organization_id_target_organization_id_index",
          "columns": [
            {
              "expression": "source_organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "target_organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organization_relationships_source_organization_id_target_organization_id_relationship_type_index": {
          "name": "organization_relationships_source_organization_id_target_organization_id_relationship_type_index",
          "columns": [
            {
              "expression": "source_organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "target_organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "relationship_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "organization_relationships_source_organization_id_organizations_id_fk": {
          "name": "organization_relationships_source_organization_id_organizations_id_fk",
          "tableFrom": "organization_relationships",
          "tableTo": "organizations",
          "columnsFrom": [
            "source_organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "organization_relationships_target_organization_id_organizations_id_fk": {
          "name": "organization_relationships_target_organization_id_organizations_id_fk",
          "tableFrom": "organization_relationships",
          "tableTo": "organizations",
          "columnsFrom": [
            "target_organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organizationUser_to_access_roles": {
      "name": "organizationUser_to_access_roles",
      "schema": "",
      "columns": {
        "organization_user_id": {
          "name": "organization_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "access_role_id": {
          "name": "access_role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "organizationUser_to_access_roles_org_user_idx": {
          "name": "organizationUser_to_access_roles_org_user_idx",
          "columns": [
            {
              "expression": "organization_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organizationUser_to_access_roles_role_idx": {
          "name": "organizationUser_to_access_roles_role_idx",
          "columns": [
            {
              "expression": "access_role_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "organizationUser_to_access_roles_organization_user_id_organization_users_id_fk": {
          "name": "organizationUser_to_access_roles_organization_user_id_organization_users_id_fk",
          "tableFrom": "organizationUser_to_access_roles",
          "tableTo": "organization_users",
          "columnsFrom": [
            "organization_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "organizationUser_to_access_roles_access_role_id_access_roles_id_fk": {
          "name": "organizationUser_to_access_roles_access_role_id_access_roles_id_fk",
          "tableFrom": "organizationUser_to_access_roles",
          "tableTo": "access_roles",
          "columnsFrom": [
            "access_role_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "organizationUser_to_access_roles_organization_user_id_access_role_id_pk": {
          "name": "organizationUser_to_access_roles_organization_user_id_access_role_id_pk",
          "columns": [
            "organization_user_id",
            "access_role_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organization_users": {
      "name": "organization_users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "auth_user_id": {
          "name": "auth_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "about": {
          "name": "about",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "organization_users_id_index": {
          "name": "organization_users_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organization_users_email_index": {
          "name": "organization_users_email_index",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organizationUsers_email_gin_index": {
          "name": "organizationUsers_email_gin_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"email\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "gin",
          "with": {}
        },
        "organizationUsers_organizations_idx": {
          "name": "organizationUsers_organizations_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organizationUsers_auth_user_id_idx": {
          "name": "organizationUsers_auth_user_id_idx",
          "columns": [
            {
              "expression": "auth_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "organization_users_auth_user_id_users_id_fk": {
          "name": "organization_users_auth_user_id_users_id_fk",
          "tableFrom": "organization_users",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "auth_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "organization_users_organization_id_organizations_id_fk": {
          "name": "organization_users_organization_id_organizations_id_fk",
          "tableFrom": "organization_users",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organizations": {
      "name": "organizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "domain": {
          "name": "domain",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "is_verified": {
          "name": "is_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "network_organization": {
          "name": "network_organization",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "is_offering_funds": {
          "name": "is_offering_funds",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "is_receiving_funds": {
          "name": "is_receiving_funds",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "accepting_applications": {
          "name": "accepting_applications",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "org_type": {
          "name": "org_type",
          "type": "org_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'other'"
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "organizations_id_index": {
          "name": "organizations_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organizations_profile_id_index": {
          "name": "organizations_profile_id_index",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organizations_created_at_index": {
          "name": "organizations_created_at_index",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organizations_updated_at_index": {
          "name": "organizations_updated_at_index",
          "columns": [
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "organizations_profile_id_profiles_id_fk": {
          "name": "organizations_profile_id_profiles_id_fk",
          "tableFrom": "organizations",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organizations_strategies": {
      "name": "organizations_strategies",
      "schema": "",
      "columns": {
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "taxonomy_term_id": {
          "name": "taxonomy_term_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "organizations_strategies_organization_id_organizations_id_fk": {
          "name": "organizations_strategies_organization_id_organizations_id_fk",
          "tableFrom": "organizations_strategies",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "organizations_strategies_taxonomy_term_id_taxonomyTerms_id_fk": {
          "name": "organizations_strategies_taxonomy_term_id_taxonomyTerms_id_fk",
          "tableFrom": "organizations_strategies",
          "tableTo": "taxonomyTerms",
          "columnsFrom": [
            "taxonomy_term_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "organizations_strategies_organization_id_taxonomy_term_id_pk": {
          "name": "organizations_strategies_organization_id_taxonomy_term_id_pk",
          "columns": [
            "organization_id",
            "taxonomy_term_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organizations_terms": {
      "name": "organizations_terms",
      "schema": "",
      "columns": {
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "taxonomy_term_id": {
          "name": "taxonomy_term_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "organizations_terms_organization_id_organizations_id_fk": {
          "name": "organizations_terms_organization_id_organizations_id_fk",
          "tableFrom": "organizations_terms",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "organizations_terms_taxonomy_term_id_taxonomyTerms_id_fk": {
          "name": "organizations_terms_taxonomy_term_id_taxonomyTerms_id_fk",
          "tableFrom": "organizations_terms",
          "tableTo": "taxonomyTerms",
          "columnsFrom": [
            "taxonomy_term_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "organizations_terms_organization_id_taxonomy_term_id_pk": {
          "name": "organizations_terms_organization_id_taxonomy_term_id_pk",
          "columns": [
            "organization_id",
            "taxonomy_term_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organizations_where_we_work": {
      "name": "organizations_where_we_work",
      "schema": "",
      "columns": {
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "location_id": {
          "name": "location_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "organizations_where_we_work_organization_id_organizations_id_fk": {
          "name": "organizations_where_we_work_organization_id_organizations_id_fk",
          "tableFrom": "organizations_where_we_work",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "organizations_where_we_work_location_id_locations_id_fk": {
          "name": "organizations_where_we_work_location_id_locations_id_fk",
          "tableFrom": "organizations_where_we_work",
          "tableTo": "locations",
          "columnsFrom": [
            "location_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "organizations_where_we_work_organization_id_location_id_pk": {
          "name": "organizations_where_we_work_organization_id_location_id_pk",
          "columns": [
            "organization_id",
            "location_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.post_reactions": {
      "name": "post_reactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "post_id": {
          "name": "post_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "reaction_type": {
          "name": "reaction_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "post_reactions_post_id_index": {
          "name": "post_reactions_post_id_index",
          "columns": [
            {
              "expression": "post_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "post_reactions_profile_id_index": {
          "name": "post_reactions_profile_id_index",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "post_reactions_reaction_type_index": {
          "name": "post_reactions_reaction_type_index",
          "columns": [
            {
              "expression": "reaction_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "post_reactions_post_id_profile_id_reaction_type_index": {
          "name": "post_reactions_post_id_profile_id_reaction_type_index",
          "columns": [
            {
              "expression": "post_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "reaction_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "post_reactions_post_id_posts_id_fk": {
          "name": "post_reactions_post_id_posts_id_fk",
          "tableFrom": "post_reactions",
          "tableTo": "posts",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "post_reactions_profile_id_profiles_id_fk": {
          "name": "post_reactions_profile_id_profiles_id_fk",
          "tableFrom": "post_reactions",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.posts": {
      "name": "posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "parent_post_id": {
          "name": "parent_post_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "posts_id_index": {
          "name": "posts_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "posts_profile_id_index": {
          "name": "posts_profile_id_index",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "posts_parent_post_id_index": {
          "name": "posts_parent_post_id_index",
          "columns": [
            {
              "expression": "parent_post_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "posts_parent_post_id_posts_id_fk": {
          "name": "posts_parent_post_id_posts_id_fk",
          "tableFrom": "posts",
          "tableTo": "posts",
          "columnsFrom": [
            "parent_post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "posts_profile_id_profiles_id_fk": {
          "name": "posts_profile_id_profiles_id_fk",
          "tableFrom": "posts",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.posts_to_organizations": {
      "name": "posts_to_organizations",
      "schema": "",
      "columns": {
        "post_id": {
          "name": "post_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "posts_to_organizations_post_id_posts_id_fk": {
          "name": "posts_to_organizations_post_id_posts_id_fk",
          "tableFrom": "posts_to_organizations",
          "tableTo": "posts",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "posts_to_organizations_organization_id_organizations_id_fk": {
          "name": "posts_to_organizations_organization_id_organizations_id_fk",
          "tableFrom": "posts_to_organizations",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "posts_to_organizations_organization_id_post_id_pk": {
          "name": "posts_to_organizations_organization_id_post_id_pk",
          "columns": [
            "organization_id",
            "post_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.posts_to_profiles": {
      "name": "posts_to_profiles",
      "schema": "",
      "columns": {
        "post_id": {
          "name": "post_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "posts_to_profiles_post_id_idx": {
          "name": "posts_to_profiles_post_id_idx",
          "columns": [
            {
              "expression": "post_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "posts_to_profiles_profile_id_idx": {
          "name": "posts_to_profiles_profile_id_idx",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "posts_to_profiles_post_id_posts_id_fk": {
          "name": "posts_to_profiles_post_id_posts_id_fk",
          "tableFrom": "posts_to_profiles",
          "tableTo": "posts",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "posts_to_profiles_profile_id_profiles_id_fk": {
          "name": "posts_to_profiles_profile_id_profiles_id_fk",
          "tableFrom": "posts_to_profiles",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "posts_to_profiles_post_id_profile_id_pk": {
          "name": "posts_to_profiles_post_id_profile_id_pk",
          "columns": [
            "post_id",
            "profile_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.decision_process_instances": {
      "name": "decision_process_instances",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "process_id": {
          "name": "process_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "instance_data": {
          "name": "instance_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "current_state_id": {
          "name": "current_state_id",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "owner_profile_id": {
          "name": "owner_profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "decision_process_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'draft'"
        },
        "search": {
          "name": "search",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "setweight(to_tsvector('simple', \"decision_process_instances\".\"name\"), 'A') || ' ' || setweight(to_tsvector('english', COALESCE(\"decision_process_instances\".\"description\", '')), 'B')::tsvector",
            "type": "stored"
          }
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "decision_process_instances_id_index": {
          "name": "decision_process_instances_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_process_instances_process_id_index": {
          "name": "decision_process_instances_process_id_index",
          "columns": [
            {
              "expression": "process_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_process_instances_owner_profile_id_index": {
          "name": "decision_process_instances_owner_profile_id_index",
          "columns": [
            {
              "expression": "owner_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_process_instances_current_state_id_index": {
          "name": "decision_process_instances_current_state_id_index",
          "columns": [
            {
              "expression": "current_state_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "process_instances_search_index": {
          "name": "process_instances_search_index",
          "columns": [
            {
              "expression": "search",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "decision_process_instances_process_id_decision_processes_id_fk": {
          "name": "decision_process_instances_process_id_decision_processes_id_fk",
          "tableFrom": "decision_process_instances",
          "tableTo": "decision_processes",
          "columnsFrom": [
            "process_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "decision_process_instances_owner_profile_id_profiles_id_fk": {
          "name": "decision_process_instances_owner_profile_id_profiles_id_fk",
          "tableFrom": "decision_process_instances",
          "tableTo": "profiles",
          "columnsFrom": [
            "owner_profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profile_modules": {
      "name": "profile_modules",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "module_id": {
          "name": "module_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enabled_at": {
          "name": "enabled_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "enabled_by": {
          "name": "enabled_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "profile_modules_profile_id_index": {
          "name": "profile_modules_profile_id_index",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profile_modules_module_id_index": {
          "name": "profile_modules_module_id_index",
          "columns": [
            {
              "expression": "module_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profile_modules_enabled_at_index": {
          "name": "profile_modules_enabled_at_index",
          "columns": [
            {
              "expression": "enabled_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profile_modules_profile_id_profiles_id_fk": {
          "name": "profile_modules_profile_id_profiles_id_fk",
          "tableFrom": "profile_modules",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "profile_modules_module_id_modules_id_fk": {
          "name": "profile_modules_module_id_modules_id_fk",
          "tableFrom": "profile_modules",
          "tableTo": "modules",
          "columnsFrom": [
            "module_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "profile_modules_profile_id_module_id_pk": {
          "name": "profile_modules_profile_id_module_id_pk",
          "columns": [
            "profile_id",
            "module_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profile_relationships": {
      "name": "profile_relationships",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "source_profile_id": {
          "name": "source_profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "target_profile_id": {
          "name": "target_profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "relationship_type": {
          "name": "relationship_type",
          "type": "profile_relationship_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "pending": {
          "name": "pending",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "profile_relationships_source_profile_id_index": {
          "name": "profile_relationships_source_profile_id_index",
          "columns": [
            {
              "expression": "source_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profile_relationships_target_profile_id_index": {
          "name": "profile_relationships_target_profile_id_index",
          "columns": [
            {
              "expression": "target_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profile_relationships_relationship_type_index": {
          "name": "profile_relationships_relationship_type_index",
          "columns": [
            {
              "expression": "relationship_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profile_relationships_source_profile_id_pending_index": {
          "name": "profile_relationships_source_profile_id_pending_index",
          "columns": [
            {
              "expression": "source_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "pending",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profile_relationships_target_profile_id_pending_index": {
          "name": "profile_relationships_target_profile_id_pending_index",
          "columns": [
            {
              "expression": "target_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "pending",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profile_relationships_relationship_type_pending_index": {
          "name": "profile_relationships_relationship_type_pending_index",
          "columns": [
            {
              "expression": "relationship_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "pending",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profile_relationships_source_profile_id_target_profile_id_relationship_type_index": {
          "name": "profile_relationships_source_profile_id_target_profile_id_relationship_type_index",
          "columns": [
            {
              "expression": "source_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "target_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "relationship_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profile_relationships_source_profile_id_profiles_id_fk": {
          "name": "profile_relationships_source_profile_id_profiles_id_fk",
          "tableFrom": "profile_relationships",
          "tableTo": "profiles",
          "columnsFrom": [
            "source_profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "profile_relationships_target_profile_id_profiles_id_fk": {
          "name": "profile_relationships_target_profile_id_profiles_id_fk",
          "tableFrom": "profile_relationships",
          "tableTo": "profiles",
          "columnsFrom": [
            "target_profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "entity_type": {
          "name": "entity_type",
          "type": "entity_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'org'"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mission": {
          "name": "mission",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "postal_code": {
          "name": "postal_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "header_image_id": {
          "name": "header_image_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_image_id": {
          "name": "avatar_image_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "search": {
          "name": "search",
          "type": "tsvector",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "setweight(to_tsvector('simple', \"profiles\".\"name\"), 'A') || ' ' || setweight(to_tsvector('english', COALESCE(\"profiles\".\"bio\", '')), 'B') || ' ' || setweight(to_tsvector('english', COALESCE(\"profiles\".\"mission\", '')), 'C')::tsvector",
            "type": "stored"
          }
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "profiles_id_index": {
          "name": "profiles_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profiles_slug_index": {
          "name": "profiles_slug_index",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profiles_updated_at_index": {
          "name": "profiles_updated_at_index",
          "columns": [
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profiles_search_gin_index": {
          "name": "profiles_search_gin_index",
          "columns": [
            {
              "expression": "search",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_header_image_id_objects_id_fk": {
          "name": "profiles_header_image_id_objects_id_fk",
          "tableFrom": "profiles",
          "tableTo": "objects",
          "schemaTo": "storage",
          "columnsFrom": [
            "header_image_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "cascade"
        },
        "profiles_avatar_image_id_objects_id_fk": {
          "name": "profiles_avatar_image_id_objects_id_fk",
          "tableFrom": "profiles",
          "tableTo": "objects",
          "schemaTo": "storage",
          "columnsFrom": [
            "avatar_image_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_slug_unique": {
          "name": "profiles_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.projects": {
      "name": "projects",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "projects_id_index": {
          "name": "projects_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "projects_slug_index": {
          "name": "projects_slug_index",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "projects_organization_id_idx": {
          "name": "projects_organization_id_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "projects_organization_id_organizations_id_fk": {
          "name": "projects_organization_id_organizations_id_fk",
          "tableFrom": "projects",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "projects_slug_unique": {
          "name": "projects_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.decision_proposal_attachments": {
      "name": "decision_proposal_attachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "proposal_id": {
          "name": "proposal_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "attachment_id": {
          "name": "attachment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "uploaded_by": {
          "name": "uploaded_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "decision_proposal_attachments_id_index": {
          "name": "decision_proposal_attachments_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_proposal_attachments_proposal_id_index": {
          "name": "decision_proposal_attachments_proposal_id_index",
          "columns": [
            {
              "expression": "proposal_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_proposal_attachments_attachment_id_index": {
          "name": "decision_proposal_attachments_attachment_id_index",
          "columns": [
            {
              "expression": "attachment_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_proposal_attachments_uploaded_by_index": {
          "name": "decision_proposal_attachments_uploaded_by_index",
          "columns": [
            {
              "expression": "uploaded_by",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "decision_proposal_attachments_proposal_id_decision_proposals_id_fk": {
          "name": "decision_proposal_attachments_proposal_id_decision_proposals_id_fk",
          "tableFrom": "decision_proposal_attachments",
          "tableTo": "decision_proposals",
          "columnsFrom": [
            "proposal_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "decision_proposal_attachments_attachment_id_attachments_id_fk": {
          "name": "decision_proposal_attachments_attachment_id_attachments_id_fk",
          "tableFrom": "decision_proposal_attachments",
          "tableTo": "attachments",
          "columnsFrom": [
            "attachment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "decision_proposal_attachments_uploaded_by_profiles_id_fk": {
          "name": "decision_proposal_attachments_uploaded_by_profiles_id_fk",
          "tableFrom": "decision_proposal_attachments",
          "tableTo": "profiles",
          "columnsFrom": [
            "uploaded_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "dec_proposal_attachment_unq": {
          "name": "dec_proposal_attachment_unq",
          "nullsNotDistinct": false,
          "columns": [
            "proposal_id",
            "attachment_id"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.decision_categories": {
      "name": "decision_categories",
      "schema": "",
      "columns": {
        "proposal_id": {
          "name": "proposal_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "taxonomy_term_id": {
          "name": "taxonomy_term_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "proposalCategories_taxonomyTermId_index": {
          "name": "proposalCategories_taxonomyTermId_index",
          "columns": [
            {
              "expression": "taxonomy_term_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "proposalCategories_proposalId_index": {
          "name": "proposalCategories_proposalId_index",
          "columns": [
            {
              "expression": "proposal_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "decision_categories_proposal_id_decision_proposals_id_fk": {
          "name": "decision_categories_proposal_id_decision_proposals_id_fk",
          "tableFrom": "decision_categories",
          "tableTo": "decision_proposals",
          "columnsFrom": [
            "proposal_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "decision_categories_taxonomy_term_id_taxonomyTerms_id_fk": {
          "name": "decision_categories_taxonomy_term_id_taxonomyTerms_id_fk",
          "tableFrom": "decision_categories",
          "tableTo": "taxonomyTerms",
          "columnsFrom": [
            "taxonomy_term_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "decision_categories_proposal_id_taxonomy_term_id_pk": {
          "name": "decision_categories_proposal_id_taxonomy_term_id_pk",
          "columns": [
            "proposal_id",
            "taxonomy_term_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.decision_proposals": {
      "name": "decision_proposals",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "process_instance_id": {
          "name": "process_instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "proposal_data": {
          "name": "proposal_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "submitted_by_profile_id": {
          "name": "submitted_by_profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "decision_proposal_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'draft'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "decision_proposals_id_index": {
          "name": "decision_proposals_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_proposals_process_instance_id_index": {
          "name": "decision_proposals_process_instance_id_index",
          "columns": [
            {
              "expression": "process_instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_proposals_submitted_by_profile_id_index": {
          "name": "decision_proposals_submitted_by_profile_id_index",
          "columns": [
            {
              "expression": "submitted_by_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_proposals_profile_id_index": {
          "name": "decision_proposals_profile_id_index",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_proposals_status_index": {
          "name": "decision_proposals_status_index",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "proposals_status_created_at_idx": {
          "name": "proposals_status_created_at_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "proposals_process_status_idx": {
          "name": "proposals_process_status_idx",
          "columns": [
            {
              "expression": "process_instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "decision_proposals_process_instance_id_decision_process_instances_id_fk": {
          "name": "decision_proposals_process_instance_id_decision_process_instances_id_fk",
          "tableFrom": "decision_proposals",
          "tableTo": "decision_process_instances",
          "columnsFrom": [
            "process_instance_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "decision_proposals_submitted_by_profile_id_profiles_id_fk": {
          "name": "decision_proposals_submitted_by_profile_id_profiles_id_fk",
          "tableFrom": "decision_proposals",
          "tableTo": "profiles",
          "columnsFrom": [
            "submitted_by_profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "decision_proposals_profile_id_profiles_id_fk": {
          "name": "decision_proposals_profile_id_profiles_id_fk",
          "tableFrom": "decision_proposals",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.decision_transition_history": {
      "name": "decision_transition_history",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "process_instance_id": {
          "name": "process_instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "from_state_id": {
          "name": "from_state_id",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "to_state_id": {
          "name": "to_state_id",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "transition_data": {
          "name": "transition_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "triggered_by_profile_id": {
          "name": "triggered_by_profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "transitioned_at": {
          "name": "transitioned_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        }
      },
      "indexes": {
        "decision_transition_history_id_index": {
          "name": "decision_transition_history_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_transition_history_process_instance_id_index": {
          "name": "decision_transition_history_process_instance_id_index",
          "columns": [
            {
              "expression": "process_instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_transition_history_to_state_id_index": {
          "name": "decision_transition_history_to_state_id_index",
          "columns": [
            {
              "expression": "to_state_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "decision_transition_history_transitioned_at_index": {
          "name": "decision_transition_history_transitioned_at_index",
          "columns": [
            {
              "expression": "transitioned_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "decision_transition_history_process_instance_id_decision_process_instances_id_fk": {
          "name": "decision_transition_history_process_instance_id_decision_process_instances_id_fk",
          "tableFrom": "decision_transition_history",
          "tableTo": "decision_process_instances",
          "columnsFrom": [
            "process_instance_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "decision_transition_history_triggered_by_profile_id_profiles_id_fk": {
          "name": "decision_transition_history_triggered_by_profile_id_profiles_id_fk",
          "tableFrom": "decision_transition_history",
          "tableTo": "profiles",
          "columnsFrom": [
            "triggered_by_profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.taxonomies": {
      "name": "taxonomies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "namespace_uri": {
          "name": "namespace_uri",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "taxonomies_name_unique": {
          "name": "taxonomies_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.taxonomyTerms": {
      "name": "taxonomyTerms",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "taxonomy_id": {
          "name": "taxonomy_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "term_uri": {
          "name": "term_uri",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "facet": {
          "name": "facet",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "label": {
          "name": "label",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "definition": {
          "name": "definition",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "parent_id": {
          "name": "parent_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "taxonomyTerms_label_btree_index": {
          "name": "taxonomyTerms_label_btree_index",
          "columns": [
            {
              "expression": "label",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "taxonomyTerms_taxonomy_label_index": {
          "name": "taxonomyTerms_taxonomy_label_index",
          "columns": [
            {
              "expression": "taxonomy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "label",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "taxonomyTerms_data_gin_index": {
          "name": "taxonomyTerms_data_gin_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"label\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "taxonomyTerms_taxonomy_id_taxonomies_id_fk": {
          "name": "taxonomyTerms_taxonomy_id_taxonomies_id_fk",
          "tableFrom": "taxonomyTerms",
          "tableTo": "taxonomies",
          "columnsFrom": [
            "taxonomy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "taxonomyTerms_parent_id_taxonomyTerms_id_fk": {
          "name": "taxonomyTerms_parent_id_taxonomyTerms_id_fk",
          "tableFrom": "taxonomyTerms",
          "tableTo": "taxonomyTerms",
          "columnsFrom": [
            "parent_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "taxonomyTerms_taxonomy_id_term_uri_unique": {
          "name": "taxonomyTerms_taxonomy_id_term_uri_unique",
          "nullsNotDistinct": false,
          "columns": [
            "taxonomy_id",
            "term_uri"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "auth_user_id": {
          "name": "auth_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "about": {
          "name": "about",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_image_id": {
          "name": "avatar_image_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "last_org_id": {
          "name": "last_org_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "current_profile_id": {
          "name": "current_profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "tos": {
          "name": "tos",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "privacy": {
          "name": "privacy",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "users_id_index": {
          "name": "users_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "users_auth_user_id_index": {
          "name": "users_auth_user_id_index",
          "columns": [
            {
              "expression": "auth_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "users_profile_id_index": {
          "name": "users_profile_id_index",
          "columns": [
            {
              "expression": "profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "users_avatar_image_id_index": {
          "name": "users_avatar_image_id_index",
          "columns": [
            {
              "expression": "avatar_image_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_last_org_id_index": {
          "name": "users_last_org_id_index",
          "columns": [
            {
              "expression": "last_org_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_current_profile_id_index": {
          "name": "users_current_profile_id_index",
          "columns": [
            {
              "expression": "current_profile_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_index": {
          "name": "users_email_index",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "users_email_gin_index": {
          "name": "users_email_gin_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"email\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "gin",
          "with": {}
        },
        "users_username_gin_index": {
          "name": "users_username_gin_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"username\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_auth_user_id_users_id_fk": {
          "name": "users_auth_user_id_users_id_fk",
          "tableFrom": "users",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "auth_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "users_avatar_image_id_objects_id_fk": {
          "name": "users_avatar_image_id_objects_id_fk",
          "tableFrom": "users",
          "tableTo": "objects",
          "schemaTo": "storage",
          "columnsFrom": [
            "avatar_image_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "cascade"
        },
        "users_last_org_id_organizations_id_fk": {
          "name": "users_last_org_id_organizations_id_fk",
          "tableFrom": "users",
          "tableTo": "organizations",
          "columnsFrom": [
            "last_org_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "users_profile_id_profiles_id_fk": {
          "name": "users_profile_id_profiles_id_fk",
          "tableFrom": "users",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "users_current_profile_id_profiles_id_fk": {
          "name": "users_current_profile_id_profiles_id_fk",
          "tableFrom": "users",
          "tableTo": "profiles",
          "columnsFrom": [
            "current_profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.entity_type": {
      "name": "entity_type",
      "schema": "public",
      "values": [
        "org",
        "user",
        "individual",
        "proposal"
      ]
    },
    "public.link_type": {
      "name": "link_type",
      "schema": "public",
      "values": [
        "offering",
        "receiving",
        "website",
        "social"
      ]
    },
    "public.org_type": {
      "name": "org_type",
      "schema": "public",
      "values": [
        "nonprofit",
        "forprofit",
        "government",
        "other"
      ]
    },
    "public.decision_process_status": {
      "name": "decision_process_status",
      "schema": "public",
      "values": [
        "draft",
        "active",
        "paused",
        "completed",
        "cancelled"
      ]
    },
    "public.profile_relationship_type": {
      "name": "profile_relationship_type",
      "schema": "public",
      "values": [
        "following",
        "likes"
      ]
    },
    "public.decision_proposal_status": {
      "name": "decision_proposal_status",
      "schema": "public",
      "values": [
        "draft",
        "submitted",
        "under_review",
        "approved",
        "rejected"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.users_used_storage": {
      "columns": {},
      "definition": "select (storage.foldername(\"name\"))[1] as \"user_id\", COALESCE(SUM((\"metadata\"->>'size')::bigint), 0) as \"total_size\" from \"storage\".\"objects\" where \"storage\".\"objects\".\"bucket_id\" = 'assets' group by (storage.foldername(\"storage\".\"objects\".\"name\"))[1]",
      "name": "users_used_storage",
      "schema": "public",
      "isExisting": false,
      "with": {
        "securityInvoker": false
      },
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}