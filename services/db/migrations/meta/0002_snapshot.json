{
  "id": "a72a132f-7915-4410-9084-43af5c53dfb2",
  "prevId": "0bdf3695-c6fa-4678-814b-92dd9ad8a549",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.access_roles": {
      "name": "access_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "access": {
          "name": "access",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "access_roles_id_index": {
          "name": "access_roles_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.links": {
      "name": "links",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "href": {
          "name": "href",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "link_type": {
          "name": "link_type",
          "type": "link_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'offering'"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "links_id_index": {
          "name": "links_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "links_organization_id_organizations_id_fk": {
          "name": "links_organization_id_organizations_id_fk",
          "tableFrom": "links",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.organizations": {
      "name": "organizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "mission": {
          "name": "mission",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "year_founded": {
          "name": "year_founded",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "values": {
          "name": "values",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "postal_code": {
          "name": "postal_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "latitude": {
          "name": "latitude",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "longitude": {
          "name": "longitude",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "is_verified": {
          "name": "is_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "social_links": {
          "name": "social_links",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "is_offering_funds": {
          "name": "is_offering_funds",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "is_receiving_funds": {
          "name": "is_receiving_funds",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "org_type": {
          "name": "org_type",
          "type": "org_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'other'"
        },
        "header_image_id": {
          "name": "header_image_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_image_id": {
          "name": "avatar_image_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "organizations_id_index": {
          "name": "organizations_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organizations_slug_index": {
          "name": "organizations_slug_index",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "organizations_name_gin_index": {
          "name": "organizations_name_gin_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"name\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "organizations_header_image_id_objects_id_fk": {
          "name": "organizations_header_image_id_objects_id_fk",
          "tableFrom": "organizations",
          "tableTo": "objects",
          "schemaTo": "storage",
          "columnsFrom": [
            "header_image_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "cascade"
        },
        "organizations_avatar_image_id_objects_id_fk": {
          "name": "organizations_avatar_image_id_objects_id_fk",
          "tableFrom": "organizations",
          "tableTo": "objects",
          "schemaTo": "storage",
          "columnsFrom": [
            "avatar_image_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "organizations_slug_unique": {
          "name": "organizations_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "about": {
          "name": "about",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "profiles_id_index": {
          "name": "profiles_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profiles_email_index": {
          "name": "profiles_email_index",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profiles_username_index": {
          "name": "profiles_username_index",
          "columns": [
            {
              "expression": "username",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "profiles_email_gin_index": {
          "name": "profiles_email_gin_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"email\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "gin",
          "with": {}
        },
        "profiles_username_gin_index": {
          "name": "profiles_username_gin_index",
          "columns": [
            {
              "expression": "to_tsvector('english', \"username\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "gin",
          "with": {}
        },
        "profiles_organizations_idx": {
          "name": "profiles_organizations_idx",
          "columns": [
            {
              "expression": "organization_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_id_users_id_fk": {
          "name": "profiles_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "profiles_organization_id_organizations_id_fk": {
          "name": "profiles_organization_id_organizations_id_fk",
          "tableFrom": "profiles",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_username_unique": {
          "name": "profiles_username_unique",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        },
        "profiles_email_unique": {
          "name": "profiles_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles_to_access_roles": {
      "name": "profiles_to_access_roles",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "access_role_id": {
          "name": "access_role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_to_access_roles_profile_id_profiles_id_fk": {
          "name": "profiles_to_access_roles_profile_id_profiles_id_fk",
          "tableFrom": "profiles_to_access_roles",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "profiles_to_access_roles_access_role_id_access_roles_id_fk": {
          "name": "profiles_to_access_roles_access_role_id_access_roles_id_fk",
          "tableFrom": "profiles_to_access_roles",
          "tableTo": "access_roles",
          "columnsFrom": [
            "access_role_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "profiles_to_access_roles_profile_id_access_role_id_pk": {
          "name": "profiles_to_access_roles_profile_id_access_role_id_pk",
          "columns": [
            "profile_id",
            "access_role_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.projects": {
      "name": "projects",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'utc'::text)"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "projects_id_index": {
          "name": "projects_id_index",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        },
        "projects_slug_index": {
          "name": "projects_slug_index",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": true,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "projects_organization_id_organizations_id_fk": {
          "name": "projects_organization_id_organizations_id_fk",
          "tableFrom": "projects",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "projects_slug_unique": {
          "name": "projects_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      },
      "policies": {
        "service-role": {
          "name": "service-role",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "service_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.link_type": {
      "name": "link_type",
      "schema": "public",
      "values": [
        "offering",
        "receiving"
      ]
    },
    "public.org_type": {
      "name": "org_type",
      "schema": "public",
      "values": [
        "cooperative",
        "mutual_aid",
        "community_org",
        "social_enterprise",
        "collective",
        "commons",
        "credit_union",
        "land_trust",
        "other"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.users_used_storage": {
      "columns": {},
      "definition": "select (storage.foldername(\"name\"))[1] as \"user_id\", COALESCE(SUM((\"metadata\"->>'size')::bigint), 0) as \"total_size\" from \"storage\".\"objects\" where \"storage\".\"objects\".\"bucket_id\" = 'assets' group by (storage.foldername(\"storage\".\"objects\".\"name\"))[1]",
      "name": "users_used_storage",
      "schema": "public",
      "isExisting": false,
      "with": {
        "securityInvoker": false
      },
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
